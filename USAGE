How to assemble your alternative OS
===================================

0. Create a directory where you want to store the results. I will
   refer to that directory with $TARGET in the following
   instructions.
     $ mkdir -p $TARGET
1. Cross-compile Busybox with the configuration in `data/configs` and
   install it somewhere you find it.
     $ cd <BUSYBOXDOWNLOADPATH>
     $ cp <INSTALLPATH>/data/configs/busybox*.config .config
     $ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi-
     $ make INSTALL_PATH=$TARGET/busybox install
2. Cross-compile Linux with the configuration in `data/configs`:
     $ git clone git://girorious.org/archos/archos-gpl-gen9-kernel-ics.git
     $ cd archos-gpl-gen9-kernel-ics
     $ cp <INSTALLPATH>/data/configs/linux*.config .config
     $ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- zImage modules
     $ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- INSTALL_MOD_PATH=$TARGET/kernelmodules
     $ cp arch/arm/boot/zImage $TARGET
3. Execute the Initramfs generator:
     # ruby bin/makeinitramfs -d data/device_table.txt -i data/init \
     -s data/root-skeleton -b <BUSYBOXDOWNLOADPATH>/_install
     $ cp initramfs.cpio.lzo $TARGET
4. Enter the developer edition menu on the tablet, select "Flash
   kernel and initramfs", connect it to your PC and copy the files
   onto the tablet:
     # mount /dev/sdb /mnt
     # cp $TARGET/zImage /mnt
     # cp $TARGET/initramfs.cpio.lzo /mnt
     # umount /dev/sdb
5. Boot your tablet into the alternate OS. You will end up at a
   Busybox prompt.
6. Grab a USB stick and use it to install your favourite Linux
   distribution with a root tarball. If your tablet has a hard disk,
   you may want to install it onto that one, otherwise just use the
   USB stick as the main harddisk.
7. Copy the kernel modules onto the root device:
     # cp -r $TARGET/kernelmodules
   <rootdevicemountpoint>/lib/modules/<kernelversion>

TODO: Write something about which modules to load and
ti-connectivity.
